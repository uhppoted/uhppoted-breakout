from typing import Final

DNP: Final = [
    0xed35, 0xdb6b, 0x8189, 0xb7d7, 0x344d, 0x0213, 0x58f1, 0x6eaf, 0x12bc, 0x24e2, 0x7e00, 0x485e, 0xcbc4, 0xfd9a,
    0xa778, 0x9126, 0x5f5e, 0x6900, 0x33e2, 0x05bc, 0x8626, 0xb078, 0xea9a, 0xdcc4, 0xa0d7, 0x9689, 0xcc6b, 0xfa35,
    0x79af, 0x4ff1, 0x1513, 0x234d, 0xc49a, 0xf2c4, 0xa826, 0x9e78, 0x1de2, 0x2bbc, 0x715e, 0x4700, 0x3b13, 0x0d4d,
    0x57af, 0x61f1, 0xe26b, 0xd435, 0x8ed7, 0xb889, 0x76f1, 0x40af, 0x1a4d, 0x2c13, 0xaf89, 0x99d7, 0xc335, 0xf56b,
    0x8978, 0xbf26, 0xe5c4, 0xd39a, 0x5000, 0x665e, 0x3cbc, 0x0ae2, 0xbe6b, 0x8835, 0xd2d7, 0xe489, 0x6713, 0x514d,
    0x0baf, 0x3df1, 0x41e2, 0x77bc, 0x2d5e, 0x1b00, 0x989a, 0xaec4, 0xf426, 0xc278, 0x0c00, 0x3a5e, 0x60bc, 0x56e2,
    0xd578, 0xe326, 0xb9c4, 0x8f9a, 0xf389, 0xc5d7, 0x9f35, 0xa96b, 0x2af1, 0x1caf, 0x464d, 0x7013, 0x97c4, 0xa19a,
    0xfb78, 0xcd26, 0x4ebc, 0x78e2, 0x2200, 0x145e, 0x684d, 0x5e13, 0x04f1, 0x32af, 0xb135, 0x876b, 0xdd89, 0xebd7,
    0x25af, 0x13f1, 0x4913, 0x7f4d, 0xfcd7, 0xca89, 0x906b, 0xa635, 0xda26, 0xec78, 0xb69a, 0x80c4, 0x035e, 0x3500,
    0x6fe2, 0x59bc, 0x4b89, 0x7dd7, 0x2735, 0x116b, 0x92f1, 0xa4af, 0xfe4d, 0xc813, 0xb400, 0x825e, 0xd8bc, 0xeee2,
    0x6d78, 0x5b26, 0x01c4, 0x379a, 0xf9e2, 0xcfbc, 0x955e, 0xa300, 0x209a, 0x16c4, 0x4c26, 0x7a78, 0x066b, 0x3035,
    0x6ad7, 0x5c89, 0xdf13, 0xe94d, 0xb3af, 0x85f1, 0x6226, 0x5478, 0x0e9a, 0x38c4, 0xbb5e, 0x8d00, 0xd7e2, 0xe1bc,
    0x9daf, 0xabf1, 0xf113, 0xc74d, 0x44d7, 0x7289, 0x286b, 0x1e35, 0xd04d, 0xe613, 0xbcf1, 0x8aaf, 0x0935, 0x3f6b,
    0x6589, 0x53d7, 0x2fc4, 0x199a, 0x4378, 0x7526, 0xf6bc, 0xc0e2, 0x9a00, 0xac5e, 0x18d7, 0x2e89, 0x746b, 0x4235,
    0xc1af, 0xf7f1, 0xad13, 0x9b4d, 0xe75e, 0xd100, 0x8be2, 0xbdbc, 0x3e26, 0x0878, 0x529a, 0x64c4, 0xaabc, 0x9ce2,
    0xc600, 0xf05e, 0x73c4, 0x459a, 0x1f78, 0x2926, 0x5535, 0x636b, 0x3989, 0x0fd7, 0x8c4d, 0xba13, 0xe0f1, 0xd6af,
    0x3178, 0x0726, 0x5dc4, 0x6b9a, 0xe800, 0xde5e, 0x84bc, 0xb2e2, 0xcef1, 0xf8af, 0xa24d, 0x9413, 0x1789, 0x21d7,
    0x7b35, 0x4d6b, 0x8313, 0xb54d, 0xefaf, 0xd9f1, 0x5a6b, 0x6c35, 0x36d7, 0x0089, 0x7c9a, 0x4ac4, 0x1026, 0x2678,
    0xa5e2, 0x93bc, 0xc95e, 0xff00
]


def CRC16(crc, data):
    for b in data:
        ix = (crc ^ b) & 0xff
        crc = (crc >> 8) ^ DNP[ix]

    return crc
